    СПИСОК требований №2

1. Заняться разбором и реализацией issues на github

2. Unit тесты!!!

3. Игровая механика

4. Реализовать требования к работе сервера
    https://park.mail.ru/blog/topic/3991/


 Да прибудет с тобой сила
---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------


!+! 1. Регистрация
    Запрос: POST
    URL запроса: /register
    Параметры запроса:name, email, password
    Ожидаемый ответ: 
                        signup : true (false),
                        login : "exists" ("notexists"),
                        email : true (false) //проверяешь валидность на сервере, если всё норм возвращаешь true
                        password: true (false) //аналогично полю email
                        

2. Авторизация
    Запрос: POST
    URL запроса: /login
    Параметры запроса: name, password
    Ожидаемый ответ:
                        name: username,
                        auth: true (false)

!+! 3. Кнопка выход
    Запрос: GET
    URL запроса: /exit
    Параметры запроса: нет
    Ожидаемый ответ:
                    exit: true (false)
                    
4. Проверка залогинен ли пользователь
    Запрос:GET
    URL запроса: /checkAuth
    Параметры запроса: нет
    Ожидаемый ответ: 
                    auth: true (false)
                    
                                                    ИГРОВАЯ МЕХАНИКА

После описание взаимодействия игроко я выделил следующие данные необходимые для реализации механики:
    
    * для игрока:
        isMyTurn : true / false - очередь делать ход
        chipColor: blue / red - цвет фишки синий / красный
        win: true (false) 
        roundWins: 0/1/2 - сколько раундов выиграл игрок       

    * для игрового поля:
        filledCell: 3 - номер заполненной ячейки, считая с 0 до 41 по столбцам сверху вниз. 
        turnTime: 20, 19, 18 ... 1, 0 - время таймера на сервере, который отсчитывает время хода 

        
    * Игрок сделал ход:
        column : 1, 2 ... 7 - столбец, выбранный пользователем
         
    
        
    1) Первый игрок зашёл на страницу игры. Осуществляется проверка, залогинен ли пользователь. 
        * Нет - отправляем игрока залогиниться.
        * Да - создаем комнату /* Позже напишем, как она будет функционировать */

            Игрок получает сообщение "Подождите противника"
        
                        /***********************************************************/
                        /***** Как при этом взаимодействуют frontend И backend *****/
                        /***********************************************************/
                        
                         Вход в игру:
                            Запрос:GET
                            URL запроса: /game
                            Параметры запроса: нет
                            Ожидаемый ответ: 
                                            name: username
                                            auth: true (false)  
                                                  
                        /* Здесь должно быть описание взаимодействия Фронта и Бэка 
                                при создании команаты */
                        
                        /------------------------------------------------------------/
                        
    
    2)Подключился второй игрок. Зашедший первым игрок пусть берет синие, вторым - красные. 
        Синие ходят первыми. Соответственно в следующем раунде первыми будут ходить красные. 
        
                        /***********************************************************/
                        /***** Как при этом взаимодействуют frontend И backend *****/
                        /***********************************************************/
                        Второй игрок выполняет пункт 1 игровой механики. 
                
                        Создаётся новая игровая сессия.
                        
                        При создании сессии запоминай время её создания, чтобы потом проверить и 
                            удалить просроченные. Можно удалять вручную из админки. Просматривать 
                            открытые сессии и, если время, которое они работают, больше суммы 
                            максимального времени всех ходов игроков, удалять. Можно автоматически
                            всё реализовать - на твое усматрение. Можно и так и так. :D 
                            Пусть это реализует отдельный сервис.
                            
                            Cокет цепляй на url: /gameplay
                            -> потом будешь доставать URLы из файла *.properties. 
                            смотри конец этого файла
                            
                        Сокет с сервера посылает сообщение:
                             status: ready
                             isMyTurn : true
                             chipColor: blue 

                             roundNum: 1
                             
                        Фронтэнд информирует игроков о цвете их фишек, спрашивает игроков
                            о готовности и затем отсылает серверу сообщение: 
                              status: ready
                         На что сервер реагирует, запуская игру - таймер первого хода и 
                         отправляет сообщение: 
                              status: run 
                              turnTime: 20
                        
                        /------------------------------------------------------------/
    

    3) При начале хода запускается таймер - время хода ограничено. Есть две возможные ситуации:
            а) Игрок не успел сделать ход:
                    Сервер выбирает произвольный столбец со свободной ячейкой и кидает в него фишку игрока.
            б) Игрок сделал свой ход:
                    На сервер посылается номер столбца, который был выбран игроком.

                        /***********************************************************/
                        /***** Как при этом взаимодействуют frontend И backend *****/
                        /***********************************************************/
                        Во время хода сервер посылает сообщение:     
                           status: run
                           turnTime: 20,19...1
                        
                        Игрок сделал ход, Фронт посылает сообщение: 
                           status: collumnChoosed
                           collumn: 1, 2, ..., 7
                        /------------------------------------------------------------/
    
    4) Ход сделан одним игроком. Ход передается другому.

                        /***********************************************************/
                        /***** Как при этом взаимодействуют frontend И backend *****/
                        /***********************************************************/
                          В любом случае, успел игрок сделать ход или нет, сервер 
                          отсылает сообщение: 
                              status: changeTurn
                              isMyTurn: false
                              filledCell: 6 
                              
                         Фронтэнд, получив сообщение о смене хода и заполненной ячейке,
                            отрисовывает игровое поле и посылает сообщение серверу:
                                status: ready 
                          
                          Сервер, понимает, что анимация отрисована, игрок вдуплил,
                             что может ходить.    
                            
                          От сервера идёт сообщение:
                              status: run
                              turnTime: 20
                        
                        /------------------------------------------------------------/    
 
                        
    5) Очередной ход сделан от сервера получены данные об окончании игры. Игрокам выводятся соответсвующие
        сообщения о выигрыше или проигрыше. Предлагается сыграть еще раз с противником. 
            Да - сессия продолжается. Нет - закрытие игровой сессии.
    
                        /***********************************************************/
                        /***** Как при этом взаимодействуют frontend И backend *****/
                        /***********************************************************/
                         Закончился раунд: 
                            От сервера:
                                status: roundOver
                                win: true

                            Фронт сообщает о конце раунда и отправляет 
                            сообщение серверу:
                                status: ready                                
                          
                         Игра закончилась, сервер посылает сообщение:
                                status: gameOver
                                win: true
                                
                         Фронт спрашивает о желании сыграть ещё раз и отправляет 
                             сообщение: 
                                status: playAgain
                                answer: true
                        
                        /------------------------------------------------------------/
    
                    
 
 
 
    ********************************************
        ЧТО ЗАПИХНУТЬ В *.properties ? 
    ********************************************

turnTime: 20 - время хода по умолчанию
gamesToWin: 3 - количество игр до окончательной победы/ничьи/поражения 
socketPort: 8090 
socketUrl: /gameplay

-> можно прописать URLы, на которых работают сервлеты
    
    
    
    
    
    
    
    
                                                     


